package layouts

import (
	"fmt"
	"github.com/axzilla/templui/internal/config"
	"github.com/axzilla/templui/internal/ctxkeys"
	"github.com/axzilla/templui/internal/ui/modules"
)


templ BaseLayout(title, description string) {
	<!DOCTYPE html>
	<html lang="en" class="h-full">
		<head>
			// SEO
			@modules.SEO(title, description, ctx.Value(ctxkeys.URLPathValue).(string))
			// Charset & Viewport
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<style>
                [x-cloak] { display: none !important; }
            </style>
			// templui.min.js
			<script defer nonce={ templ.GetNonce(ctx) } src="/assets/js/templui.min.js"></script>
			// Plausible Analytics
			if config.AppConfig.GoEnv == "production" {
				<script defer data-domain="templui.io" src="https://plausible.axeladrian.com/js/script.js" nonce={ templ.GetNonce(ctx) }></script>
			}
			// Shiki Highlighter Script
			@modules.CodeHighlightingScript()
			// Favicon
			<link rel="icon" href="/assets/img/favicon.svg" type="image/x-icon"/>
			// Tailwind CSS
			<link href="/assets/css/output.css" rel="stylesheet"/>
			// Custom CSS
			<link href="/assets/css/themes.css" rel="stylesheet"/>
			// Alpine.js 
			<script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/csp@3.x.x/dist/cdn.min.js"></script>
			// HTMX
			<script nonce={ templ.GetNonce(ctx) } src="https://cdn.jsdelivr.net/npm/htmx.org@2.0.4/dist/htmx.min.js"></script>
			// Set script nonce for HTMX // without this, HTMX will not work with CSP
			<meta
				name="htmx-config"
				content={ fmt.Sprintf(`{
			    "inlineScriptNonce": "%s"
			}`, templ.GetNonce(ctx)) }
			/>
		</head>
		<body
			class="h-full flex flex-col transition-colors duration-200"
		>
			<div class="flex flex-col min-h-screen">
				{ children... }
			</div>
		</body>
		// HTMX
		<script nonce={ templ.GetNonce(ctx) }>
			// Re-initialize templUI components after HTMX swaps
			document.body.addEventListener("htmx:afterSwap", (e) => {
				if (window.templUI) {
					Object.values(window.templUI).forEach(comp => {
						comp.init?.(e.detail.elt);
					});
				}
			});

			// Re-initialize components after out-of-band swaps
			document.body.addEventListener("htmx:oobAfterSwap", (e) => {
				if (window.templUI) {
					Object.values(window.templUI).forEach(comp => {
						comp.init?.(e.detail.target);
					});
				}
			});

			// Optional: Cleanup before swap (for components with event listeners)
			document.body.addEventListener("htmx:beforeSwap", (e) => {
				if (window.templUI) {
					Object.values(window.templUI).forEach(comp => {
						comp.cleanup?.(e.detail.target);
					});
				}
			});
		</script>
	</html>
}
