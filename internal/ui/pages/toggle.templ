package pages

import (
	"github.com/axzilla/templui/internal/ui/layouts"
	"github.com/axzilla/templui/internal/ui/modules"
	"github.com/axzilla/templui/internal/ui/showcase"
)

templ Toggle() {
	@layouts.DocsLayout(
		"Toggle",
		"Two-state button that can be switched on or off.",
		[]modules.TableOfContentsItem{
			{
				ID:   "installation",
				Text: "Installation",
			},
			{
				Text: "Examples",
				ID:   "examples",
				Children: []modules.TableOfContentsItem{
					{
						Text: "Checked",
						ID:   "checked",
					},
					{
						Text: "With Label",
						ID:   "with-label",
					},
					{
						Text: "Disabled",
						ID:   "disabled",
					},
					{
						Text: "Form",
						ID:   "form",
					},
				},
			},
			{
				ID:   "api",
				Text: "API Reference",
				Children: []modules.TableOfContentsItem{
					{
						ID:   "toggle",
						Text: "Toggle",
					},
				},
			},
		},
	) {
		@modules.PageWrapper(modules.PageWrapperProps{
			Name:        "Toggle",
			Description: templ.Raw("Two-state button that can be switched on or off."),
			Tailwind:    true,
			Breadcrumbs: modules.Breadcrumbs{
				Items: []modules.BreadcrumbItem{
					{
						Text: "Docs",
						Path: "/docs",
					},
					{
						Text: "Components",
						Path: "/docs/components",
					},
					{
						Text: "Toggle",
					},
				},
			},
		}) {
			@modules.ExampleWrapper(modules.ExampleWrapperProps{
				ShowcaseFile:    showcase.ToggleDefault(),
				PreviewCodeFile: "toggle_default.templ",
			})
			@modules.ContainerWrapper(modules.ContainerWrapperProps{
				Title: "Installation",
				ID:    "installation",
			}) {
				@modules.ComponentUsage(modules.ComponentUsageProps{
					ComponentName: "toggle",
				})
			}
			@modules.ContainerWrapper(modules.ContainerWrapperProps{
				Title: "Examples",
				ID:    "examples",
			}) {
				@modules.ExampleWrapper(modules.ExampleWrapperProps{
					SectionName:     "Checked",
					ShowcaseFile:    showcase.ToggleChecked(),
					PreviewCodeFile: "toggle_checked.templ",
					ID:              "checked",
				})
				@modules.ExampleWrapper(modules.ExampleWrapperProps{
					SectionName:     "With Label",
					ShowcaseFile:    showcase.ToggleWithLabel(),
					PreviewCodeFile: "toggle_with_label.templ",
					ID:              "with-label",
				})
				@modules.ExampleWrapper(modules.ExampleWrapperProps{
					SectionName:     "Disabled",
					ShowcaseFile:    showcase.ToggleDisabled(),
					PreviewCodeFile: "toggle_disabled.templ",
					ID:              "disabled",
				})
				@modules.ExampleWrapper(modules.ExampleWrapperProps{
					SectionName:     "Form",
					ShowcaseFile:    showcase.ToggleForm(),
					PreviewCodeFile: "toggle_form.templ",
					ID:              "form",
				})
			}
			@modules.ContainerWrapper(modules.ContainerWrapperProps{
				Title: "API Reference",
				ID:    "api",
			}) {
				@modules.APILegend()
				<div id="toggle" class="mb-8">
					@modules.APITable(modules.APITableProps{
						Title:       "Toggle",
						Description: "Two-state button component that can be switched on or off.",
						Items: []modules.APITableItem{
							{
								Name:        "ID",
								Type:        "string",
								Default:     "",
								Description: "Unique identifier for the toggle element.",
								Required:    false,
							},
							{
								Name:        "Class",
								Type:        "string",
								Default:     "",
								Description: "Additional CSS classes to apply to the toggle.",
								Required:    false,
							},
							{
								Name:        "Attributes",
								Type:        "templ.Attributes",
								Default:     "",
								Description: "Additional HTML attributes to apply to the toggle element.",
								Required:    false,
							},
							{
								Name:        "Name",
								Type:        "string",
								Default:     "",
								Description: "Name attribute for form submission.",
								Required:    false,
							},
							{
								Name:        "Checked",
								Type:        "bool",
								Default:     "false",
								Description: "Whether the toggle is initially checked.",
								Required:    false,
							},
							{
								Name:        "Disabled",
								Type:        "bool",
								Default:     "false",
								Description: "Whether the toggle is disabled and non-interactive.",
								Required:    false,
							},
						},
					})
				</div>
			}
		}
	}
}
